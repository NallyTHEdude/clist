# Generated by Django 5.0.7 on 2024-07-28 12:15

import tqdm
from django.db import migrations
from django.db.models import Q


def set_problem_kinds(apps, schema_editor):
    Contest = apps.get_model('clist', 'Contest')
    Problem = apps.get_model('clist', 'Problem')

    contests = Contest.objects.filter(kind__isnull=False)
    qs = Problem.objects.filter(Q(contest__in=contests) | Q(contests__in=contests))
    qs = qs.prefetch_related('contests')
    qs = qs.select_related('contest')

    for problem in tqdm.tqdm(qs, total=qs.count()):
        kinds = []
        cs = list(problem.contests.all())
        if problem.contest:
            cs.append(problem.contest)
        for c in cs:
            if c.kind and c.kind not in kinds:
                kinds.append(c.kind)
        problem.kinds = kinds
        problem.save(update_fields=['kinds'])


class Migration(migrations.Migration):

    dependencies = [
        ('clist', '0160_problem_kinds'),
    ]

    operations = [
        migrations.RunPython(set_problem_kinds),
    ]
